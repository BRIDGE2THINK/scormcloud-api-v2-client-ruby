=begin
#SCORM Cloud Rest API

#REST API used for SCORM Cloud integrations.

OpenAPI spec version: 2.0 beta

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module RusticiSoftwareCloudV2
  class AuthenticationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Authenticates for a oauth token
    # 
    # @param scope 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :expiration  (default to 300)
    # @return [ApplicationToken]
    def get_app_token(scope, opts = {})
      data, _status_code, _headers = get_app_token_with_http_info(scope, opts)
      return data
    end

    # Authenticates for a oauth token
    # 
    # @param scope 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :expiration 
    # @return [Array<(ApplicationToken, Fixnum, Hash)>] ApplicationToken data, response status code and response headers
    def get_app_token_with_http_info(scope, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AuthenticationApi.get_app_token ..."
      end
      # verify the required parameter 'scope' is set
      fail ArgumentError, "Missing the required parameter 'scope' when calling AuthenticationApi.get_app_token" if scope.nil?
      if !opts[:'expiration'].nil? && opts[:'expiration'] > 43200.0
        fail ArgumentError, 'invalid value for "opts[:"expiration"]" when calling AuthenticationApi.get_app_token, must be smaller than or equal to 43200.0.'
      end

      if !opts[:'expiration'].nil? && opts[:'expiration'] < 60.0
        fail ArgumentError, 'invalid value for "opts[:"expiration"]" when calling AuthenticationApi.get_app_token, must be greater than or equal to 60.0.'
      end

      # resource path
      local_var_path = "/oauth/authenticate/application/token".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}
      form_params["scope"] = scope
      form_params["expiration"] = opts[:'expiration'] if !opts[:'expiration'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['APP_NORMAL']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApplicationToken')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AuthenticationApi#get_app_token\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
